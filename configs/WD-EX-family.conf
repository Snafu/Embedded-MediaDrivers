
PACKAGE_NAME=WD-EX-family
PACKAGE_CODE=WDEXFAMILY

KERNEL_LOCATION=linux-3.10.39-2014_T3.0.tar.gz
KERNEL_MD5=e50df3226efb93bb2477c9ba78a71da4

TOOLCHAIN_LOCATION=armv7-marvell-linux-gnueabi-softfp_i686_64K_Dev_20131002.tar.gz
TOOLCHAIN_MD5=006caa9a2831c9290dd48db0ff185e21

EXTRAS_LOCATION=netatop-0.5.tar.gz

function WDEXFAMILY_ENVIRONMENT {
	echo "custom environment"

	mkdir -p ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}

	if [ ! -d "${TOOLCHAIN_LOCATION/.tar.gz/}" ] ; then
		tar -zxf ${TOP_MDB_DIR}/dl/${PACKAGE_NAME}/${TOOLCHAIN_LOCATION}
	fi
	source ${TOP_MDB_DIR}/board/${PACKAGE_NAME}/source.me
}

function WDEXFAMILY_KERNEL_CONFIGURE {
	echo "custom kernel configure func"
	mkdir -p ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}

	if [ ! -d "${KERNEL_LOCATION/.tar.gz/}" ] ; then
		tar -zxf ${TOP_MDB_DIR}/dl/${PACKAGE_NAME}/${KERNEL_LOCATION}
	fi

	for i in ${EXTRAS_LOCATION} ; do
		if [ ! -d "${i/tar.gz}" ] ; then
			tar -xzf ${TOP_MDB_DIR}/dl/${PACKAGE_NAME}/${i}
		fi
	done

	cd "${KERNEL_LOCATION/.tar.gz/}"
	if [ ! -f .flag_patched ] ; then
		for i in ${TOP_MDB_DIR}/board/${PACKAGE_NAME}/kernel_patches/*patch ; do
			patch -p1 < ${i}
		done
		touch .flag_patched
	fi
}

function WDEXFAMILY_KERNEL_BUILD {
	echo "custom kernel build func";

	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	if [ ! -d "${KERNEL_LOCATION/.tar.gz/}" ] ; then
		WDEXFAMILY_KERNEL_CONFIGURE
	fi

	cd "${TOP_MDB_DIR}/build/${PACKAGE_CODE}/${KERNEL_LOCATION/.tar.gz/}"

	./xbuild.sh build
}

function WDEXFAMILY_KERNEL_CLEAN {
	echo "custom kernel clean func";

	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	if [ ! -d "${KERNEL_LOCATION/.tar.gz/}" ] ; then
		WDEXFAMILY_KERNEL_CONFIGURE
	fi

	cd "${TOP_MDB_DIR}/build/${PACKAGE_CODE}/${KERNEL_LOCATION/.tar.gz/}"

	./xbuild.sh clean
}

function WDEXFAMILY_MEDIA_CONFIGURE {
	echo "custom media configure func";
	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}

	if [ ! -d media_build ] ; then
		git clone http://git.linuxtv.org/cgit.cgi/media_build.git
	fi

	cp ${TOP_MDB_DIR}/board/${PACKAGE_NAME}/media_build/config-mycompat.h media_build/v4l

	cd media_build

	make release DIR=${TOP_MDB_DIR}/build/${PACKAGE_CODE}/${KERNEL_LOCATION/.tar.gz/}
	make -C linux/ download
	make -C linux/ untar
}

function WDEXFAMILY_MEDIA_BUILD {
	echo "custom media build func";

	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}
	if [ ! -d "media_build" ] ; then
		WDEXFAMILY_MEDIA_CONFIGURE
	fi

	cd ${TOP_MDB_DIR}/build/${PACKAGE_CODE}/media_build

	make -C v4l/
}

function WDEXFAMILY_MEDIA_CLEAN {
	echo "custom media clean func";
}
